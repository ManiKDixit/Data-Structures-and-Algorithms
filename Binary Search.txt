package DSA;
import java.util.*;
import java.util.HashSet;
import java.util.List;

public class Practice {
	

	// Function for Binary Search 
	
	public void BinarySearch(int[] arr, int elem)
	{
		//Arrays.sort(arr);
		int li = 0 ; 
		int hi = arr.length -1 ; 
		int mid = (li+hi)/2 ;
		
		while(li <= hi)
		{
			if(arr[mid] == elem)
			{
				System.out.println("The element " +elem+ " is at  " +mid+ " index in the array ");
				break;
			}
			
			else if (arr[mid] < elem)
			{
				li = mid + 1 ;
			}
			
			else
			{
				hi = mid -1 ;
			}
			
			mid = (li+hi)/2;
			
			if(li > hi)
			{
				System.out.println("Elemnt not found");
			}
		}
	}
	
	public void printArray(int[] arr)
	{
		for (int i = 0; i < arr.length; i++) {
			System.out.print(arr[i] + " ");
			System.out.println(i + " ");
		}
	}
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the number of elements in the array");
		int n = sc.nextInt();
		int[] array = new int[n];
		System.out.println("Enter the elements in the array");
		for (int i = 0; i < array.length; i++) {
			array[i] = sc.nextInt();
		}
		
		
		
		Practice prac = new Practice();
		prac.printArray(array);
		System.out.println("Enter the element to search ");
		int s = sc.nextInt();
		prac.BinarySearch(array, s);
	}
	

}
